type ModerationDispute @entity{
    id: ID!
    timestampLastUpdated: BigInt!
    timestampLastRound: BigInt
    timestampLastAppeal: BigInt
    timestampLastAppealPossible: BigInt
    rulingFunded: BigInt
    currentRuling: BigInt
    finalRuling: BigInt
    moderationInfo: ModerationInfo!
}

type ModerationInfo @entity(immutable: true){
    id: ID!
    moderationType: BigInt!
    rulesUrl: String!
    message: String!
    messageBackup: String!
    reportedBy: User!
    askedBy: Bytes!
    deadline: BigInt
    timeout: BigInt!
    user: User!
    dispute: ModerationDispute @derivedFrom(field: "moderationInfo")
    reality: RealityCheck
}

type RealityCheck @entity{
    id: ID!
    currentAnswer: Bytes
    deadline: BigInt!
    timeServed: BigInt
    blocknumberLastUpdated: BigInt
    timestampLastUpdated: BigInt
    moderationInfo: ModerationInfo! @derivedFrom(field: "reality")
}

type UserHistory @entity{
    id: ID!
    user: User!
    timestampLastUpdated: BigInt!
    timestampParole: BigInt!
    countBrokeRulesOptimisticAndArbitrated: Int!
    countBrokeRulesArbitrated: Int!
    countReportsMade: Int!
    countReportsMadeAndResponded: Int!
    timestampLastReport: BigInt!
}

type User @entity(immutable: true){
    id: ID!
    username: String
    userID: String!
    group: Group!
    history: UserHistory @derivedFrom(field: "user")
    moderation: [ModerationInfo!]! @derivedFrom(field: "user")
}

type Janny @entity{
    id: ID!
    group: Group!
    blocknumberLastUpdatedSheriff: BigInt
    blocknumberLastUpdatedDeputySheriff: BigInt
    timestampLastUpdatedSheriff: BigInt
    timestampLastUpdatedDeputySheriff: BigInt
    sheriff: User
    deputySheriff: User
}

type Group @entity(immutable: true){
    id: ID!
    name: String
    platform: String!
    groupID: String!
    botAddress: Bytes!
    users: [User!]! @derivedFrom(field: "group")
}

type Group @entity(immutable: true){
    id: ID!
    name: String
    platform: String!
    groupID: String!
    botAddress: Bytes!
    users: [User!]! @derivedFrom(field: "group")
}